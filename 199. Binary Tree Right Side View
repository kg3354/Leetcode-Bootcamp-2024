# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        themap = defaultdict(int)
        def ite(node, depth):
            if node is None :
                return
            themap[depth] = (node.val)
            if node.left:
                ite(node.left, depth+1)
            if node.right:
                ite(node.right, depth+1)

        ite(root, 0)
        result = []
        for i in range (len(themap)):
            result.append(themap[i])
        
        return result
