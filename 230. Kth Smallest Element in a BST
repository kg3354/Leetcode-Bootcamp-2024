# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:
        # result = []
        
        # def ite(node):
        #     if node is None:
        #         return
        #     if len(result) < k:
        #         result.append(node.val)
        #     else:
        #         if result[k-1] > node.val:
        #             result.pop()
        #             result.append(node.val)
        #     result.sort()
        #     ite(node.left)
        #     ite(node.right)
        
        # ite(root)
        # return max(result)

        result = -1

        def ite(node):
            nonlocal k
            nonlocal result
            if node is None:
                return 
            ite(node.left)
            k-=1
            if k == 0:
                result = node.val
                return
            ite(node.right)
        ite(root)

        return result
